- name: Install MediaMTX
  become: true
  become_user: root
  hosts: picam04 #camera_hosts
  vars:
    arch_map: 
      "armv6l": "armv6"
      "armv7l": "armv7"
      "aarch64": "arm64v8"
      "x86_64": "amd64"
      "amd64": "amd64"
    archive_arch: "{{ arch_map[ ansible_architecture ] }}"
    archive_version: "1.0.3"
    archive_filename: mediamtx_v{{ archive_version }}_linux_{{ archive_arch }}
    service_name: "camera_stream"
    username: "camera_stream"
    group: "{{ username }}"
    target_directory: "mediamtx"
    description: "Camera Stream"
  tasks:
    # - name: Update os packages
    #   ansible.builtin.apt:
    #     update_cache: yes
    #     upgrade: yes
    - name: Create user
      ansible.builtin.user:
        name: "{{ username }}"
        shell: /bin/false
        system: true
    - name: Retrieve user information
      ansible.builtin.getent:
        database: passwd
        key: "{{ username }}"
    - name: Set working_directory
      ansible.builtin.set_fact:
        working_directory: "{{ ansible_facts.getent_passwd.camera_stream[4] }}/{{ target_directory }}"
    - name: Set exec_start
      ansible.builtin.set_fact:
        exec_start: "{{ working_directory }}/mediamtx"    
    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
        suffix: mediamtx
      register: tempdir
    - name: Download
      ansible.builtin.get_url:
        url: https://github.com/bluenviron/mediamtx/releases/download/v{{ archive_version }}/{{ archive_filename }}.tar.gz
        dest: "{{ tempdir.path }}/"
    - name: Unarchive 
      ansible.builtin.unarchive:
        remote_src: yes
        src: "{{ tempdir.path }}/{{ archive_filename }}.tar.gz"
        dest: "{{ tempdir.path }}/"
    - name: Move binary to target directory
      ansible.builtin.copy:
        src: "{{ tempdir.path }}/mediamtx"
        dest: "{{ working_directory }}/"
        remote_src: yes
        owner: "{{ username }}"
        group: "{{ group }}"
        mode: 0755
    - name: Install raspberry pi config file to target_directory
      ansible.builtin.template:
        src: templates/mediamtx_raspberrypi.yml.j2
        dest: "{{ working_directory }}/mediamtx.yml"
        owner: "{{ username }}"
        group: "{{ group }}"
        mode: 0644
      when: camera_tuning_file is defined
    - name: Install simple config file to target_directory
      ansible.builtin.template:
        src: templates/mediamtx_simple.yml.j2
        dest: "{{ working_directory }}/mediamtx.yml"
        owner: "{{ username }}"
        group: "{{ group }}"
        mode: 0644
      when: camera_tuning_file is not defined
    - name: Install simple runner to target_directory
      ansible.builtin.copy:
        src: templates/run_stream_camera0.sh
        dest: "{{ working_directory }}/"
        owner: "{{ username }}"
        group: "{{ group }}"
        mode: 0744
      when: camera_tuning_file is not defined
    - name: Install unit file to systemd
      ansible.builtin.template:
        src: templates/generic.service.j2
        dest: /etc/systemd/system/{{ service_name }}.service
        owner: root
        group: root
        mode: 0600
    - name: configure systemd to use service
      ansible.builtin.systemd:
        daemon_reload: yes
        enabled: yes
        state: started
        name: "{{ service_name }}.service"
    - name: Remove temporary directory  
      ansible.builtin.file:
        path: "{{ tempdir.path }}"
        state: absent